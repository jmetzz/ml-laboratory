[tool.poetry]
name = "ml-lab"
version = "0.0.1"
description = "Machine Learning lab code & examples"
authors = ["Jean Metz"]

[tool.poetry.dependencies]
python = "^3.8"
environs = "^8.0.0"
numpy = "^1.19.2"
pandas = "^1.1.3"
matplotlib = "^3.3.2"

psycopg2-binary = "^2.8.6"
psutil = { version = "^x5.7.3", optional = true }
line-profiler = { version = "^3.0.2", optional = true }
memory-profiler = { version = "^0.58.0", optional = true }
pyinstrument = { version = "^3.2.0", optional = true }
pandas-profiling = { version = "^2.9.0", optional = true }
graphviz = { version = "^0.14.2", optional = true }
snakeviz = { version = "^2.1.0", optional = true }
py-heat-magic = { version = "^0.0.2", optional = true }
jupyterlab = { version = "^2.2.9", optional = true }
ipykernel = { version = "^5.3.4", optional = true }


[tool.poetry.dev-dependencies]
black = "^19.10b0"               # The uncompromising code formatter.
flake9 = "^3.8.3.post2"          # the modular source code checker: pep8 pyflakes and co
mypy = "^0.790"                  # Optional static typing for Python
pytest = "^6.1.1"                # pytest: simple powerful testing with Python
pytest-cov = "^2.10.1"           # Pytest plugin for measuring coverage.
responses = "^0.12.0"            # A utility library for mocking out the `requests` Python library.
pip-licenses = "^3.0.0"          # Generate licenses for all 3rd party packages
ipdb = "^0.13.4"                 # ipython debugger

[tool.poetry.extras]
jupyter = ["ipykernel", "jupyterlab"]
profiling = ["psutil", "line-profiler", "memory-profiler", "pyinstrument", "pandas-profiling", "graphviz", "snakeviz", "py-heat-magic" ]




[tool.flake8]
max-line-length = 120
max-complexity = 10
ignore = ["W504", "W503", "E231", "E203"]
exit-zero = 1

[tool.pytest.ini_options]
addopts = "--pdbcls=IPython.terminal.debugger:TerminalPdb --cov=algos --cov-fail-under 80"


[tool.coverage.report]
omit = ["*/__init__.py", ".mypy_cache", ".reports", ".git"]
show_missing = true

[tool.coverage.run]
omit = ["*/__init__.py", ".mypy_cache", ".reports", ".git"]

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '(\.git|\.mypy_cache|\.venv)'

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

