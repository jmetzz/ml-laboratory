[tool.poetry]
name = "ml-lab-pytorch"
version = "0.0.1"
description = "Pytorch code examples"
authors = ["Jean Metz"]

[tool.poetry.dependencies]
python = "^3.10.8"
torch = "^2.2.0"
torchvision = "^0.17.0"
colorama = "^0.4.6"
numpy = "^1.26.4"
jupyterlab = "^4.1.1"
matplotlib = "^3.8.2"

[tool.poetry.group.dev.dependencies]
pip-licenses = "^4.3.4"
ipdb = "^0.13.13"
ipython = "^8.21.0"
pre-commit = "^3.6.1"
ruff = "^0.2.1"


[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py38"
extend-include = ["*.ipynb"]


[tool.ruff.lint]
select = [# Enable
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
ignore = []
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = 92





[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry_core>=1.0.0"]
