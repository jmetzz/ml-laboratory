[tool.poetry]
name = "basic-ml"
version = "0.0.1"
description = "Basic Machine Learning lab code & examples"
authors = ["Jean Metz"]

[tool.poetry.dependencies]
python = ">=3.9.2,<3.11"
environs = "^9.3.2"
click = "^8.0.1"
python-dotenv = "^0.17.1"
numpy = "^1.21.0"
matplotlib = "^3.4.2"
pandas = "^1.2.4"
scikit-learn = "^1.1.1"
scikit-image = "^0.19.2"
seaborn = "^0.11.1"
Pillow = "^9.0.1"
statsmodels = "^0.13.2"
h5py = "^3.2.1"
toml = "^0.10.2"
tqdm = "^4.61.0"
jupyterlab = {version = "^3.0.16", optional = true}
ipywidgets = {version = "^7.6.3", optional = true}
scipy = "^1.8.1"
importlib-resources = "^5.7.1"
memory-profiler = {version = "^0.60.0", optional = true}



[tool.poetry.dev-dependencies]
colorama = "^0.4.4"
black = "^22.3.0"
mypy = "^0.812"
pytest = "^6.2.4"
pytest-cov = "^2.12.1"
pytest-sugar = "^0.9.4"
responses = "^0.13.3"
ipdb = "^0.13.9"
ipykernel = "^6.13.0"
pip-licenses = "^3.4.0"
isort = "^5.8.0"
pyupgrade = "^2.19.1"
pydocstyle = "^6.1.1"
pylint = "^2.8.3"
bandit = "^1.7.0"
ipython = "^7.24.1"
toml = "^0.10.2"


[tool.poetry.extras]
jupyter = ["ipykernel", "jupyterlab", "ipywidgets", "memory-profiler"]

[tool.isort]
profile = "black"

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '(\.git|\.mypy_cache|\.venv)'


[tool.pylint.master]
extension-pkg-whitelist = ["pydantic"]
fail-under = "9"
ignore = []

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.messages_control]
# pylint: disable=unsubscriptable-object is used here due to a bug
# showing too many false-positives. See https://github.com/PyCQA/pylint/issues/3882
disable = [
    "bad-whitespace",
    "wrong-hanging-indentation-before-block",
    "trailing-whitespace",
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "unsubscriptable-object",
    ]

[tool.pylint.miscellaneous]
notes = "FIXME,XXX,TODO,TODO,fixme,todo,TODO:"

[tool.pytest.ini_options]
addopts = "--pdbcls=IPython.terminal.debugger:TerminalPdb --cov=src --cov-fail-under 80"

[tool.coverage.report]
omit = ["*/__init__.py", ".mypy_cache", ".reports", ".git"]
show_missing = true

[tool.coverage.run]
omit = ["*/__init__.py", ".mypy_cache", ".reports", ".git"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry_core>=1.0.0"]
